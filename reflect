#
# bashrc/reflect
#
# self editing bashrc
# "I write shell scripts to write my shell scripts"
# 

alias sob="source $HOME/.bashrc"

_reflect_edit () {
  local SECTION=$1
  local JUMP=$2

  # absolute nonsense: if searching file `functions' we want to land on the definition
  # not the preceding block comment. otherwise we want to search anywhere in the line
  if [[ $JUMP ]]; then
    if [[ $SECTION == f* ]]; then
      JUMP="+/^${JUMP}"
    else JUMP="+/${JUMP}"
    fi
  fi
  # absolute madness:
  # 1. use tryhard mode to allow for typing partial names of sections e.g. "bashrc fun"
  # 2. do a ridiculous dance to set the filetype
  # 3. (potentially partial) filename
  tryhard -D "$HOME/lib $HOME/src" -g\
    vim -S `tryfind -1 -R -D "$HOME $HOME/lib/bashrc $HOME/src/bashrc" lib/set_ft_sh.vim`\ $JUMP\
    bashrc/$SECTION
}

_reflect_source () {
  tryhard -D "$HOME/lib $HOME/src" -g source "bashrc/$1"
}

# bashrc ()
# 
# edit any section of bashrc and immediately apply it
# to the current shell
#
# Usage: bashrc [-s] [section]
#   -s sources the file
#   otherwise edits then sources
# 
# cutejs (Astrid Fesz-Nguyen)
# 2019-02-23

bashrc () {
  if [[ $1 == "-s" ]]; then
    if [[ ! $2 ]]; then
      _reflect_source bashrc
    else
      _reflect_source $2
    fi
  elif [[ ! $1 ]]; then 
    _reflect_edit bashrc && _reflect_source bashrc
  elif [[ $1 == ".bashrc" ]]; then
    vim $HOME/.bashrc && source $HOME/.bashrc
  else
    _reflect_edit $@ && _reflect_source $1
  fi
}
